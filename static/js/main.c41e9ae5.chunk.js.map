{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","this","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,2EAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKL,MAAzCC,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,SAAUD,EAA7B,EAA6BA,WACvBI,EAAY,UAAOR,GAEzB,OAAQK,GACN,KAAKN,EAASU,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKb,EAASe,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAU7C,OAJKX,GACHI,EAAaQ,UAIb,sBAAKC,UAAU,MAAf,WACId,GACA,sBAAKc,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,wCAIA,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKC,SAAS,CAAEjB,WAAW,KAJ/B,sBAaHA,GACC,sBAAKc,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEf,SAAUN,EAASU,WAJzB,iCAUA,wBACES,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEf,SAAUN,EAASe,UAJzB,4BAUA,wBACEI,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEhB,YAAY,KAJlB,qBAUA,wBACEc,KAAK,SACLD,UAAU,gBACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEhB,YAAY,KAJlB,sBAWF,qBAAKa,UAAU,iBAAf,SACE,oBAAIA,UAAU,QAAd,SACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACEL,UAAU,cADZ,SAIGK,GAFIA,oBAjGzB,GAAyBC,IAAMC,WC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c41e9ae5.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isStarted, sortType, isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    switch (sortType) {\n      case SortType.ALPABET:\n        visibleGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      case SortType.LENGTH:\n        visibleGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      default:\n    }\n\n    if (!isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <div className=\"App__container\">\n            <h1 className=\"App__title\">\n              Press Start to load goods.\n            </h1>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                this.setState({ isStarted: true });\n              }}\n            >\n              Start\n            </button>\n          </div>\n\n        )}\n\n        {isStarted && (\n          <div className=\"container\">\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"buttons__list\"\n                onClick={() => this.setState(\n                  { sortType: SortType.ALPABET },\n                )}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"buttons__list\"\n                onClick={() => this.setState(\n                  { sortType: SortType.LENGTH },\n                )}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"buttons__list\"\n                onClick={() => this.setState(\n                  { isReversed: true },\n                )}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"buttons__list\"\n                onClick={() => this.setState(\n                  { isReversed: false },\n                )}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"list-container\">\n              <ul className=\"Goods\">\n                {visibleGoods.map(good => (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}